apiVersion: v1
kind: Service
metadata:
  labels:
    app: webserver
  name: webserver
spec:
  ports:
  - nodePort: 31008
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: webserver
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: webserver
  name: webserver
spec:
  replicas: 5
  selector:
    matchLabels:
      app: webserver
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - image: mateusmuller2/webserver:0.1-878d903
        imagePullPolicy: IfNotPresent
        name: webserver
        ports:
        - containerPort: 80
          protocol: TCP
        resources: # limitação de recursos, limits = teto, requests = piso
          limits:
            memory: 510M
            cpu: "500m"
          requests:
            memory: 256Mi
            cpu: "250m"
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
